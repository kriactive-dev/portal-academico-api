{
  "info": {
    "name": "Web ChatBot API - Complete Collection",
    "description": "API completa para ChatBot Web usando as mesmas questions e options do WhatsApp ChatBot",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "sessionId",
      "value": "user_test_session_{{$timestamp}}",
      "type": "string"
    },
    {
      "key": "activeSessionId",
      "value": "",
      "type": "string"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Gerar session_id √∫nico se n√£o existir",
          "if (!pm.environment.get('sessionId') || pm.environment.get('sessionId').includes('{{$timestamp}}')) {",
          "    const sessionId = 'user_test_session_' + Date.now();",
          "    pm.environment.set('sessionId', sessionId);",
          "    console.log('Generated new sessionId:', sessionId);",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Testes globais",
          "pm.test('Status code is success', function () {",
          "    pm.expect([200, 201]).to.include(pm.response.code);",
          "});",
          "",
          "pm.test('Response has success property', function () {",
          "    pm.expect(pm.response.json()).to.have.property('success');",
          "});",
          "",
          "pm.test('Content-Type is JSON', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "üöÄ Inicializar Chat",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Response has question data', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('question');",
              "    pm.expect(jsonData.data).to.have.property('options');",
              "    pm.expect(jsonData.data).to.have.property('session_info');",
              "});",
              "",
              "pm.test('Question has required fields', function () {",
              "    const question = pm.response.json().data.question;",
              "    pm.expect(question).to.have.property('id');",
              "    pm.expect(question).to.have.property('text');",
              "    pm.expect(question).to.have.property('type');",
              "    pm.expect(question).to.have.property('is_start');",
              "});",
              "",
              "// Salvar session_id ativo",
              "if (pm.response.json().success) {",
              "    const sessionInfo = pm.response.json().data.session_info;",
              "    pm.environment.set('activeSessionId', sessionInfo.session_id);",
              "    console.log('Active session saved:', sessionInfo.session_id);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{sessionId}}\",\n  \"user_identifier\": \"test.user@ucm.ac.mz\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/init",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "init"]
        },
        "description": "Inicia uma nova conversa do chatbot e retorna a primeira pergunta (is_start = true)."
      },
      "response": []
    },
    {
      "name": "üí¨ Processar Mensagem - Op√ß√£o",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Message processed successfully', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "});",
              "",
              "// Verificar tipo de resposta",
              "const responseData = pm.response.json().data;",
              "if (responseData && responseData.type) {",
              "    pm.test('Response type is valid', function () {",
              "        const validTypes = ['awaiting_student_code', 'student_info', 'conversation_end'];",
              "        pm.expect(validTypes).to.include(responseData.type);",
              "    });",
              "} else if (responseData && responseData.question) {",
              "    pm.test('Next question loaded', function () {",
              "        pm.expect(responseData.question).to.have.property('id');",
              "        pm.expect(responseData.question).to.have.property('text');",
              "    });",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\",\n  \"option_value\": \"info_academicas\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "message"]
        },
        "description": "Processa uma op√ß√£o selecionada pelo usu√°rio e retorna a pr√≥xima pergunta."
      },
      "response": []
    },
    {
      "name": "üí¨ Processar Mensagem - Texto",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\",\n  \"message\": \"Preciso de informa√ß√µes sobre minhas notas\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "message"]
        },
        "description": "Processa uma mensagem de texto livre do usu√°rio."
      },
      "response": []
    },
    {
      "name": "üéì Consultar Situa√ß√£o Acad√™mica",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\",\n  \"option_value\": \"situacao_academica\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "message"]
        },
        "description": "Seleciona op√ß√£o para consultar situa√ß√£o acad√™mica - ir√° solicitar c√≥digo do estudante."
      },
      "response": []
    },
    {
      "name": "üéì Enviar C√≥digo de Estudante",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Student info returned', function () {",
              "    const jsonData = pm.response.json();",
              "    if (jsonData.success && jsonData.data.type === 'student_info') {",
              "        pm.expect(jsonData.data.student).to.have.property('name');",
              "        pm.expect(jsonData.data.student).to.have.property('code');",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\",\n  \"message\": \"EST2025001\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "message"]
        },
        "description": "Envia c√≥digo de estudante para consultar situa√ß√£o acad√™mica."
      },
      "response": []
    },
    {
      "name": "üí∞ Consultar Situa√ß√£o Financeira",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\",\n  \"option_value\": \"situacao_financeira\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "message"]
        },
        "description": "Seleciona op√ß√£o para consultar situa√ß√£o financeira - ir√° solicitar c√≥digo do estudante."
      },
      "response": []
    },
    {
      "name": "‚¨ÖÔ∏è Voltar para Pergunta Anterior",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\",\n  \"action\": \"back\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "message"]
        },
        "description": "Volta para a pergunta anterior na conversa."
      },
      "response": []
    },
    {
      "name": "üîÑ Reiniciar Conversa",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\",\n  \"action\": \"restart\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "message"]
        },
        "description": "Reinicia a conversa voltando para a pergunta inicial."
      },
      "response": []
    },
    {
      "name": "‚ùì Obter Pergunta Atual",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Current question retrieved', function () {",
              "    const jsonData = pm.response.json();",
              "    if (jsonData.success) {",
              "        pm.expect(jsonData.data).to.have.property('question');",
              "        pm.expect(jsonData.data).to.have.property('session_info');",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/current",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "current"]
        },
        "description": "Recupera a pergunta atual da sess√£o ativa."
      },
      "response": []
    },
    {
      "name": "üìú Obter Hist√≥rico da Conversa",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('History retrieved', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.data).to.be.an('array');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/history",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "history"]
        },
        "description": "Recupera o hist√≥rico completo da conversa atual."
      },
      "response": []
    },
    {
      "name": "üîö Encerrar Chat",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Chat ended successfully', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.message).to.include('encerrada');",
              "});",
              "",
              "// Limpar session ativa",
              "pm.environment.set('activeSessionId', '');"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"{{activeSessionId}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/end",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "end"]
        },
        "description": "Encerra a sess√£o do chat e limpa o cache."
      },
      "response": []
    },
    {
      "name": "üö® Teste - Sess√£o Inexistente",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Returns 404 for invalid session', function () {",
              "    pm.expect(pm.response.code).to.equal(404);",
              "});",
              "",
              "pm.test('Error message is correct', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.false;",
              "    pm.expect(jsonData.message).to.include('Sess√£o expirada');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"session_id\": \"invalid_session_id_123\",\n  \"option_value\": \"test\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "message"]
        },
        "description": "Testa o comportamento com session_id inexistente."
      },
      "response": []
    },
    {
      "name": "üö® Teste - Dados Inv√°lidos",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Returns 422 for invalid data', function () {",
              "    pm.expect(pm.response.code).to.equal(422);",
              "});",
              "",
              "pm.test('Has validation errors', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.false;",
              "    pm.expect(jsonData).to.have.property('errors');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"message\": \"Teste sem session_id\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/web-chatbot/message",
          "host": ["{{baseUrl}}"],
          "path": ["api", "web-chatbot", "message"]
        },
        "description": "Testa valida√ß√£o com dados obrigat√≥rios ausentes."
      },
      "response": []
    }
  ]
}